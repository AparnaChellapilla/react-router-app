[{"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\index.js":"1","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\App.js":"2","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\reportWebVitals.js":"3","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Routes.js":"4","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\MenuPage.js":"5","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\HomePage.js":"6","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\AboutPage.js":"7","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\NavBarPage.js":"8","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\ContactPage.js":"9"},{"size":544,"mtime":1608302392276,"results":"10","hashOfConfig":"11"},{"size":257,"mtime":1608355138191,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":979,"mtime":1608355151289,"results":"14","hashOfConfig":"11"},{"size":602,"mtime":1608354183469,"results":"15","hashOfConfig":"11"},{"size":384,"mtime":1608353892493,"results":"16","hashOfConfig":"11"},{"size":614,"mtime":1608353836795,"results":"17","hashOfConfig":"11"},{"size":462,"mtime":1608332975299,"results":"18","hashOfConfig":"11"},{"size":548,"mtime":1608333056063,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mag4y9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\index.js",[],["42","43"],"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\App.js",["44"],"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\reportWebVitals.js",[],"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Routes.js",[],"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\MenuPage.js",["45"],"import React,{Component} from 'react';\r\nimport eat_healthy from '../eat_healthy.gif';\r\n\r\n// Menu component\r\n\r\nclass MenuPage extends Component {\r\n    render()\r\n    {     \r\n       return(\r\n        <div>\r\n          <h1>Menu</h1>\r\n          <p>Check out our amazing 24/7 menu:</p>\r\n          <img src = {eat_healthy} alt = \"Image cant be loaded\" width = \"300px\"/>\r\n            <ol>\r\n              <li>Lazy Loading</li>\r\n              <li>Dynamic Route Matching</li>\r\n              <li>Location Transition Handling</li>\r\n            </ol>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default MenuPage;","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\HomePage.js",["46"],"import React,{Component} from 'react';\r\n\r\n// HomePage component\r\nclass HomePage extends Component {\r\n    render(){\r\n      return(\r\n        <div>\r\n          <h1>React Router Restaurant</h1>\r\n          <h4>Fine Dining Experience!</h4>\r\n          <img src=\"https://media.giphy.com/media/l2QDWWJhdKQOPKbhS/giphy.gif\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n   export default HomePage;\r\n","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\AboutPage.js",["47"],"import React,{Component} from 'react';\r\nimport Gourmet_Kitchen from '../Gourmet_Kitchen.jpg';\r\n\r\n// About component\r\nclass AboutPage extends Component {\r\n    render(){\r\n      return(\r\n        <div>\r\n          <h1>About Us</h1>\r\n          <p>We here at the Triple-R love fresh URLs, especially ones tied to awesome React Components.</p>\r\n          <p>It's even better when you can switch between those URLs with ease and share them with friends and family</p>\r\n          <img alt=\"Image cant be loaded\" src={Gourmet_Kitchen} width =\"500px\"></img>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default AboutPage;","C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\NavBarPage.js",[],"C:\\Users\\gkkol\\OneDrive\\Documents\\GitHub\\react-router-app\\src\\Components\\ContactPage.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":13,"column":11,"nodeType":"58","endLine":13,"endColumn":82},{"ruleId":"59","severity":1,"message":"60","line":10,"column":11,"nodeType":"58","endLine":10,"endColumn":82},{"ruleId":"56","severity":1,"message":"57","line":12,"column":11,"nodeType":"58","endLine":12,"endColumn":80},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]